<!--   

-->
<div id="varb-storage" data-time-started="{{time_started}}" data-samp-time="{{samp_time_ball}}" data-is-running="{{isRunning}}"
 data-time-stopped="{{time_stopped}}" data-speed-fact="{{speed_up_fact}}" data-user-num="{{user_num}}">

</div>
<br/>

<div id="varb-in" data-tim-int={{commTimeInt}}></div>
<wrapper>
	<div class="row">
		<div class="col-md-3">
			<h4>Engine Running</h4>
			<h5 id="is_started">{{isRunning}} </h5>
			<h5 id="time_elapsed">{{time_elapsed}}</h5>
		</div>
	</div>
	<div class="row">
		<div class="col-md-6 col-lg-12">
			<button class='jumbotron btn-large btn-danger' style="float: left;" id="btn-hit-1">Hit Ball</button>
			<button class='jumbotron btn-large btn-success' style="float: right;" id="btn-start-game">Start Game</button>
			<button class='jumbotron btn-large btn-warning' style="float: right;" id="btn-serve-1">Serve</button>
		</div>
	</div>     
	<div class="row">
		<div class="col-md-6 col-lg-12">
			<button class='btn-large btn-warning' style="float: right; margin: 5px;" id="btn-stats" onclick="location.href='https://richbu.github.io/Pong2180_user_demo/'" >stats</button>
			<button class='btn-large btn-warning' style="float: right; margin: 5px;" id="btn-user-2" onclick="location.href='https://pong2180-physics.herokuapp.com/users/mobile/2'">user 2</button>
			<button class='btn-large btn-warning' style="float: right; margin: 5px;" id="btn-user-1" onclick="location.href='https://pong2180-physics.herokuapp.com/users/mobile/1'">user 1</button>
		</div>
	</div>

	<div id="div-full-stats" >
		<iframe src="https://richbu.github.io/Pong2180_user_demo/" width="490px" height="1095px" >
		</iframe>
	</div>

	<style>
		header {
			color: white;
			background-image: linear-gradient(180deg, rgba(224, 133, 14, 1), rgba(173, 52, 62, 1));
		}

		body {
			background-image: url('matrixgridfloor.png');
		}

		.monotonFont {
			font-family: 'Monoton', cursive;
		}
	</style>


</wrapper>
<br/>
<br/>
<br/>


<p class="clear">
	{{logged_in}} | {{{ body }}}



	<script>
		var snap;
		var snapAfter;
		var myBlob;
		var formData;

		var take_photo_btn;
		var image;
		var video;
		var submitButton;
		var submitClick;
		var hidden_canvas;

		var cameraStillTaken = false;
		var autoPictSendInProg = false;
		var timeInterval;     	//time interval for pics
		var myIntervalTimer;  	//handle to interval timer
		//var myCommStatTimer; 	//timer for the comm status
		var commStatTimerInt = 3; 	//interval 
		var commStopAuto; //stop the auto pics

		var global_User_Id;
		var global_Device_Id;
		var global_Email_Id;
		var sendObj = {
			ball_samp_time: 0.00,
			speed_up_fact: 0.00,
			start_button: 0,
			stop_button: 0,
			hit_01: 0,
			hit_02: 0,
			place_ball_1: 0,
			place_ball_2: 0
		};

		var timerLockOutBit = false;
		var timerLock;

		var deviceRotat = {
			rotX: 0,
			rotY: 0,
			rotZ: 0,
			isValid: false,
			isArmedX: false,
			isArmedY: false
		};




		//sends a "hit" to the physics engine thru users
		var sendPostHit = function () {
			$.post("/users/mobile/hit",
				sendObj,
				function (data, status) {
					if (data.errCode === 0) {
						//there is no error
						var userNum = parseInt($("#varb-storage").attr("data-user-num"));
						//do I need to reload the page ?
						//window.location.href = "/users/mobile/" + userNum;
					} else {
						//what to do with error ?
					};
				});

		};

		//sends a "serve" to the physics engine thru users
		var sendPostServe = function () {
			$.post("/users/mobile/serve",
				sendObj,
				function (data, status) {
					if (data.errCode === 0) {
						//there is no error
						var userNum = parseInt($("#varb-storage").attr("data-user-num"));
						//do I need to reload the page ?
						//window.location.href = "/users/mobile/" + userNum;
					} else {
						//what to do with error ?
					};
				});

		};

		var sendPostGame = function () {
			$.post("/physics/start/2",	//to let it know that it is from mobile
				sendObj,
				function (data, status) {
					if (data.errCode === 0) {
						//there is no error
						var userNum = parseInt($("#varb-storage").attr("data-user-num"));
						//do I need to reload the page ???
						//window.location.href = "/users/mobile/" + userNum;
					} else {
						//what to do with error ?
					};
				});

		};

		var clearTimer = function () {
			console.log("can hit again");
			timerLockOutBit = false;
			timerLock = null;
		};

		var hitBall = function () {
			if (timerLockOutBit == false) {
				console.log("lock out multiple hits");
				timerLock = setTimeout(clearTimer, 3000);
				timerLockOutBit = true;
				if (navigator.vibrate) {
					//vibratation is active
					navigator.vibrate([200, 100, 200]);
				};
				var userNum = parseInt($("#varb-storage").attr("data-user-num"));
				sendObj.ball_samp_time = $('#ball_samp_time').val();
				sendObj.speed_up_fact = $('#spd_up_fact').val();
				sendObj.start_button = false;
				sendObj.stop_button = false;
				sendObj.place_ball_1 = 0;
				sendObj.place_ball_2 = 0;
				if (userNum == 1) {
					sendObj.hit_01 = 1;
					sendObj.hit_02 = 0;
				} else {
					sendObj.hit_01 = 0;
					sendObj.hit_02 = 1;
				};
				sendPostHit();
			} else {
				//keep resetting the 
				deviceRotat.isArmedX = false;
				deviceRotat.isArmedY = false;
			};
		};

		$(document).ready(function () {
			//for device orientation

			//set up vibration
			navigator.vibrate = navigator.vibrate || navigator.webkitVibrate || navigator.mozVibrate || navigator.msVibrate;

			if (window.DeviceOrientationEvent) {
				deviceRotat.isValid = true;
				window.addEventListener("deviceorientation", function (event) {
					deviceRotat.rotX = Math.round(event.gamma);
					deviceRotat.rotY = Math.round(event.beta);
					deviceRotat.rotZ = Math.round(event.alpha);
					//alert(deviceRotat.rotX);
					//now check if armed
					//if ( deviceRotat.rotX >25 deviceRotat.isArmedY === false ) {
					if (deviceRotat.rotX > 25) {
						if (deviceRotat.isArmedX == false) {
							deviceRotat.isArmedX = true;
							if (navigator.vibrate) {
								//vibratation is active
								navigator.vibrate(100);
							};
						}
						//alert( "armed on X");
					} else {
						//rotat X is towards the positive side
						if (deviceRotat.rotX < -25 && deviceRotat.isArmedX) {
							//it is greater than 0, but is it above threshold
							deviceRotat.isArmedX = false;
							deviceRotat.isArmedY = false;
							hitBall();
							//alert("swung the phone X axis");
						};
					};
					//if ( deviceRotat.rotY > 25 && deviceRotat.isArmedX === false ) {
					if (deviceRotat.rotY > 25) {
						if (deviceRotat.isArmedY == false) {
							deviceRotat.isArmedY = true;
							if (navigator.vibrate) {
								//vibratation is active
								navigator.vibrate(100);
							};
						};
					} else {
						//rotat X is towards the positive side
						if (deviceRotat.rotY < -25 && deviceRotat.isArmedY) {
							//it is greater than 0, but is it above threshold
							deviceRotat.isArmedX = false;
							deviceRotat.isArmedY = false;
							hitBall();
							//alert("swung the phone Y axis");
						};
					};
				}, true);
			} else {
				deviceRotat.isValid = false;
				alert("sorry your browser does not support gyro");
			};

			var timeVal = $('#varb-storage').attr("data-samp-time");
			var speedUpFact = $('#varb-storage').attr("data-speed-fact");

			$('#ball_samp_time').val(timeVal);
			$('#spd_up_fact').val(speedUpFact);
			$(document.body).on("click", ".sendButton", function () {
				sendImageClick(false);
			});
			$(document.body).on("click", "#btn-start-game", function () {
				sendObj.ball_samp_time = $('#ball_samp_time').val();
				sendObj.speed_up_fact = $('#spd_up_fact').val();
				sendObj.start_button = true;
				sendObj.stop_button = false;
				sendPostGame();
			});

			$(document.body).on("click", "#btn-hit-1", function () {
				hitBall();
			});
			$(document.body).on("click", "#btn-serve-1", function () {
				var userNum = parseInt($("#varb-storage").attr("data-user-num"));
				sendObj.ball_samp_time = $('#ball_samp_time').val();
				sendObj.speed_up_fact = $('#spd_up_fact').val();
				sendObj.start_button = false;
				sendObj.stop_button = false;
				sendObj.hit_01 = 0;
				sendObj.hit_02 = 0;
				if (userNum == 1) {
					sendObj.place_ball_1 = 1;
					sendObj.place_ball_2 = 0;
				} else {
					sendObj.place_ball_1 = 0;
					sendObj.place_ball_2 = 1;
				}
				sendPostServe();
			});
			//			window.setTimeout( function() {
			//				window.location.reload(true);
			//			}, 10000 )

		});

	</script>